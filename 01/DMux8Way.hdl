// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */
    /*
    000 a
    001 b
    010 c
    011 d
    100 e
    101 f
    110 g
    111 h
    */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    DMux(in=in, sel=sel[2], a=abcdsel, b=efghsel);
    DMux4Way(in=abcdsel, sel=sel[0..1], a=a, b=b, c=c, d=d);
    DMux4Way(in=efghsel, sel=sel[0..1], a=e, b=f, c=g, d=h);

    /* simple truth table way: */
    /*
    Not(in=sel[2], out=ns2);
    Not(in=sel[1], out=ns1);
    Not(in=sel[0], out=ns0);

    And(a=ns2, b=ns1, out=ff);
    And(a=ns2, b=sel[1], out=ft);
    And(a=sel[2], b=ns1, out=tf);
    And(a=sel[2], b=sel[1], out=tt);
    
    And(a=ff, b=ns0, out=fff);
    And(a=ff, b=sel[0], out=fft);
    And(a=ft, b=ns0, out=ftf);
    And(a=ft, b=sel[0], out=ftt);
    And(a=tf, b=ns0, out=tff);
    And(a=tf, b=sel[0], out=tft);
    And(a=tt, b=ns0, out=ttf);
    And(a=tt, b=sel[0], out=ttt);
   
    And(a=fff, b=in, out=a);
    And(a=fft, b=in, out=b);
    And(a=ftf, b=in, out=c);
    And(a=ftt, b=in, out=d);
    And(a=tff, b=in, out=e);
    And(a=tft, b=in, out=f);
    And(a=ttf, b=in, out=g);
    And(a=ttt, b=in, out=h);
    */
}

